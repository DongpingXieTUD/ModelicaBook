
# 
msgid ""
msgstr ""
"Project-Id-Version: Modelica by Example 0.2.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-11 17:23-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"


#: ../../source/behavior/equations/first_order.rst:4
msgid "Simple First Order System"
msgstr ""
"简单的一阶系统"

#: ../../source/behavior/equations/first_order.rst:6
msgid "Let us consider an extremely simple differential equation:"
msgstr ""
"首先，让我们考虑一个非常简单的微分方程:"

#: ../../source/behavior/equations/first_order.rst:10
msgid ""
"Looking at this equation, we see there is only one variable, :math:`x`.  "
"This equation can be represented in Modelica as follows:"
msgstr ""
"在这个方程中，只有一个变量\ :math:`x`\ 。此方程可以用Modelica语言表述如下："

#: ../../source/behavior/equations/first_order.rst:23
msgid ""
"This code starts with the keyword ``model`` which is used to indicate the "
"start of the model definition.  The ``model`` keyword is followed by the "
"model name, ``FirstOrder``.  This, in turn, is followed by a declaration of "
"all the variables we are interested in."
msgstr ""
"这段代码以关键词\ ``model``\ 开始，以表明模型定义的开始。后面紧跟着模型的名字\ ``FirstOrder``\ ，再后面是我们感兴趣的变量声明部分。"

#: ../../source/behavior/equations/first_order.rst:28
msgid ""
"Since the variable :math:`x` in our equation is clearly meant to be a "
"continuous real valued variable, its declaration in Modelica takes the form "
"``Real x;``.  The ``Real`` type is just one of the types we can use (a more "
"complete description of the various possibilities will be discussed in the "
"upcoming section on :ref:`variables`)."
msgstr ""
"从这个方程中，我们可以确定变量\ :math:`x`\ 是一个连续实数。在Modelica语言中，我们可以用\ ``Real x;``\ 语句来声明它。"
"\ ``Real``\ 类型只是众多数据类型的一种（在接下来的\ :ref:`\ 变量\ `\ 一节中，将会对数据类型进行更加详细的讨论）。"

#: ../../source/behavior/equations/first_order.rst:34
msgid ""
"Once all the variables have been declared, we can begin including the "
"equations that describe the behavior of our model.  In this case, we can use"
" the ``der`` operator to represent the time derivative of ``x``.  Thus,"
msgstr ""
"当所有的变量声明完成后，我们就可以编写描述模型特性的方程了。在这个例子中，我们可以用运算符\ ``der``\ 来表示变量\ ``x``\ 的一阶导数。所以："

#: ../../source/behavior/equations/first_order.rst:43
msgid "is equivalent to:"
msgstr ""
"其所描述的含义等同于方程："

#: ../../source/behavior/equations/first_order.rst:47
msgid ""
"Unlike most programming languages, we don't approach code like this as a "
"\"program\" that can be interpreted as a set of instructions to be executed "
"one after the other.  Instead, we use a Modelica compiler to transform this "
"model into something that we can simulate.  This simulation step essentially"
" amounts to solving (usually numerically) the equation and providing a "
"solution trajectory like this:"
msgstr ""
"不同于大多数的编程语言，我们并不像运行“程序”那样将代码解析成逐条执行的指令。"
"相反，我们使用Modelica编译器将代码转换成可以仿真的模型。这种仿真的过程基本上等同于求解方程（通常用数值方法）并获取其解的轨迹的过程。如下图所示："

#: ../../source/behavior/equations/first_order.rst:57
msgid ""
"This gives you the first initial hint at one of the compelling aspects about"
" using a modeling language to describe mathematical behavior.  We didn't "
"need to describe how to solve this differential equation.  The focus is "
"entirely on behavior.  As we work our way through more complex examples, we "
"will see that **much of the tedious work involving the solution process is "
"handled automatically by the Modelica compiler**."
msgstr ""
"通过上面的例子，让你对使用建模语言描述系统的数学特性有了一个初步的了解。"
"我们并不需要描述如何去求解这个微分方程，我们关注的重点完全放在方程本身的特性上。"
"在我们介绍更复杂的实例时，你将会发现\ **很多涉及求解过程的繁琐工作都是由Modelica编译器自动处理的**\ 。"

#: ../../source/behavior/equations/first_order.rst:68
msgid "Adding Some Documentation"
msgstr ""
"添加文档"

#: ../../source/behavior/equations/first_order.rst:70
msgid ""
"Now that we've solved this simple mathematical equation, let's turn our "
"attention briefly to how we can make the model a bit more readable.  "
"Consider the following model:"
msgstr ""
"现在，我们已经完成了这个简单数学方程的求解，让我们把重点转移到如何才能使模型更具可读性。我们考虑如下的模型："

#: ../../source/behavior/equations/first_order.rst:82
msgid "Note the quoted text in this model."
msgstr ""
"注意在这个模型中引号中的文字。"

#: ../../source/behavior/equations/first_order.rst:84
msgid ""
"It is important to understand that the quoted text blocks, called "
"\"strings\" in computer science, are **not** comments.  They are "
"\"descriptive strings\" and, unlike comments, they cannot be added in "
"arbitrary places.  Instead, they can only be inserted in specific places to "
"provide additional documentation about the elements of the model they are "
"associated with."
msgstr ""
"理解这些引号中的文字模块非常重要，它们在计算机科学中被称为“字符串”，而\ **不是**\ 注释。"
"这些“描述性字符串”不像注释，不能在任意的地方插入。相反的，它们只能在特定的地方插入，以提供与其关联的模型元素的附加说明。"

#: ../../source/behavior/equations/first_order.rst:90
msgid ""
"For example, the first string \"A simple first order differential equation\""
" is used to describe what this is a model of.  Note how it follows the name "
"of the model.  If you wish to include such documentation about the model, it"
" must appear immediately after the model name as shown."
msgstr ""
"例如，第一个字符串 \"A simple first order differential equation\" （一个简单的一阶微分方程）用来描述模型的属性。你可以注意到，它紧跟在模型名字后面。如果你希望对模型做相应的注释，文档语句必须插入在模型名字的后面。"

#: ../../source/behavior/equations/first_order.rst:96
msgid ""
"As we will see later, this kind of documentation can be used by tools in "
"many ways.  For example, when searching for models, a tool may use these "
"descriptive strings when identifying matches.  This text may also be "
"associated with a graphical representation of the models.  And, of course, "
"this kind of documentation is very useful for anybody reading the model."
msgstr ""
"在后面我们将会看到，这种文档可以被很多工具所使用。例如，搜索模型时，搜索工具可以利用这些描述性的字符串进行识别匹配。"
"这些文本也可以与模型的图示相关联。当然，这种文档对阅读模型的任何人都很有帮助。"

#: ../../source/behavior/equations/first_order.rst:103
msgid ""
"As this example demonstrates, there are other places that the descriptive "
"text can appear.  For example, it may be included after the declaration of a"
" variable or equation to document them."
msgstr ""
"通过上面的例子，我们可以看到，这些描述性的文本也可以放置在模型的其他位置。比如，在变量声明或方程后面添加相应的文档。"

#: ../../source/behavior/equations/first_order.rst:110
msgid "Initialization"
msgstr ""
"初始化"

#: ../../source/behavior/equations/first_order.rst:112
msgid ""
"As we have seen already, Modelica allows us to describe model behavior in "
"terms of differential equations.  But the initial conditions we choose are "
"just as important as the equations."
msgstr ""
"通过上面的例子可以看到，Modelica语言允许我们使用微分方程去描述模型的特性。但是，设定初始条件和编写方程同样重要。"

#: ../../source/behavior/equations/first_order.rst:116
msgid ""
"For this reason, Modelica also provides constructs for describing the "
"initialization of our system of equations.  For example, if we wanted the "
"initial value of ``x`` in our model to be *2*, we could add an ``initial "
"equation`` section to our model as follows:"
msgstr ""
"因此，Modelica语言也提供用于描述方程组初始化的结构。例如，如果我们想给模型中变量\ ``x``\ 赋初值为\ *2*\ ，可以在模型中增加\ ``initial equation``\ （初始化方程）区域，如下所示："

#: ../../source/behavior/equations/first_order.rst:129
msgid ""
"Note that the only difference between this model and the previous one, "
"presented in the section on :ref:`first-order-doc`, is the addition of the "
"``initial equation`` section which contains the equation ``x = 2``.  In the "
"previous example, the initial value of ``x`` at the start of the simulation "
"was unspecified.  Generally speaking, this means that the initial value for "
"``x`` will be the value of its ``start`` attribute (which is zero by "
"default).  However, because each tool uses their own specific algorithms to "
"formulate the final system of equations, it is always best to state initial "
"conditions explicitly, as we have done here.  By adding this equation to the"
" ``initial equation`` section, we are explicitly specifying the initial "
"condition for ``x``."
msgstr ""
"我们可以看到，上述模型和前面\ :ref:`first-order-doc`\ 小节所述模型唯一不同的地方在于，这里多了\ ``initial equation``\ 部分，即包含方程\ ``x = 2``\ 。"
"在前面的例子中，变量\ ``x``\ 的初始值在模型仿真开始时是不确定的。通常，这意味着变量\ ``x``\ 的初始值是它的\ ``start``\ 属性（其缺省值为零）。"
"然而，每个工具都会使用自己特定的算法对最终的方程组进行表示。因此，我们最好明确的声明方程的初始化条件，就像上述模型声明的那样。"
"通过在\ ``initial equation``\ 部分添加相应的方程，我们就明确的完成了变量\ ``x``\ 的初始化声明。"

#: ../../source/behavior/equations/first_order.rst:142
msgid ""
"As a result, the solution trajectory is quite different as we can see in the"
" following figure:"
msgstr ""
"如下图所示，是否对变量进行初始化定义，其方程解的轨迹完全不同："

#: ../../source/behavior/equations/first_order.rst:147
msgid ""
"The model ``FirstOrderInitial`` shows a typical way of initializing a system"
" by providing explicit initial values for the states of the system.  In "
"fact, a system of differential equations is incomplete without a "
"specification for how the initial conditions are determined. Our "
"``FirstOrderInitial`` model would be represented mathematically as:"
msgstr ""
"\ ``FirstOrderInitial``\ 模型展示了初始化系统的典型方式：为系统状态提供明确的初始值。"
"事实上，没有确定初始条件的微分方程组并不完整。\ ``FirstOrderInitial``\ 模型可以用数学方程表示如下："

#: ../../source/behavior/equations/first_order.rst:156
msgid ""
"However, there are many cases where you want a more sophisticated type of "
"initialization.  An ``initial equation`` section can contain more than just "
"explicit equations for the initial values of the state variables."
msgstr ""
"当然了，很多情况下，你也许需要更为复杂的初始化条件。\ ``initial equation``\ 区域不仅仅可以包含显示方程的状态变量初始值。"

#: ../../source/behavior/equations/first_order.rst:161
msgid ""
"For example, we might want our initial conditions to be such that the "
"derivative of :math:`x` was zero at the start of the simulation.  In this "
"case, only a bit of trivial algebra is required to realize that this could "
"be accomplished by specifying an initial condition of :math:`x(0)=1`.  "
"However, for more complex systems, it is far from trivial to determine the "
"initial state values that would satisfy such a requirement.  In those cases,"
" it is possible to express the constraint that :math:`\\dot{x}(0)=0` "
"directly in Modelica as follows:"
msgstr ""
"例如，我们可能希望在仿真开始时，\ :math:`x`\ 的导数为零。稍有点代数知识的就会知道，这可以通过指定初始条件\ :math:`x(0)=1`\ 来实现。"
"但是，对于更复杂的系统，通过这种方式确定初始条件是很困难的。在这些情况下，可以在Modelica中直接添加初始条件 :math:`\\dot{x}(0)=0` ，如下所示："

#: ../../source/behavior/equations/first_order.rst:176
msgid "Simulating this system gives the following solution:"
msgstr ""
"仿真该系统会得到以下结果："

#: ../../source/behavior/equations/first_order.rst:180
msgid ""
"As we see from these results, the initial derivative of :math:`x` is zero at"
" the start of the simulation and remains zero because there are no external "
"influences acting on this system that would disrupt this equilibrium."
msgstr ""
"从这些结果中可以看到，因为没有破坏系统平衡的外部激励，\ :math:`x`\ 的导数在仿真开始以及仿真过程中一直保持为0。"

#: ../../source/behavior/equations/first_order.rst:185
msgid ""
"This provides a glimpse of the initialization capablities in Modelica. More "
"complete coverage of the initialization topic can be found in the "
":ref:`initialization` section later in this chapter."
msgstr ""
"本章节提供了Modelica初始化功能的概述，有关初始化功能更完整的内容将在后面的\ :ref:`initialization`\ 章节中介绍。"

#: ../../source/behavior/equations/first_order.rst:192
msgid "Experimental Conditions"
msgstr ""
"试验条件"

#: ../../source/behavior/equations/first_order.rst:197
msgid ""
"When building a model, the model developer might wish to associate specific "
"experimental conditions with the model.  This can be done using something "
"called an ``annotation``.  An annotation includes information that is not "
"directly related to the behavior of the model."
msgstr ""
"当搭建模型时，建模人员可能希望为模型关联特定的试验条件。这可以通过应用\ ``annotation``\ （标注）来完成。标注中包含的信息与模型的属性没有直接联系。"

#: ../../source/behavior/equations/first_order.rst:202
msgid ""
"For example, experimental conditions describe information like the start "
"time of the simulation, the stop time, solution tolerance and so on.  This "
"is not information about the behavior of the model itself, but rather "
"information about how to approach simulating that behavior. Experimental "
"conditions are stored in a model using a specific annotation called the "
"``experiment`` annotation."
msgstr ""
"例如，试验条件的描述包括仿真开始时间、结束时间以及容差范围等，这些信息并不描述模型的特性，只是提供进行模拟仿真的条件。"
"试验条件通过特定的\ ``experiment``\ 标注保存在模型中。"

#: ../../source/behavior/equations/first_order.rst:209
msgid ""
"There are four pieces of information that can be specified in an experiment "
"annotation.  All of them are optional.  The following is a model of our "
"first order system that includes an experiment annotation:"
msgstr ""
"可以通过设定4个参数完成试验条件的设置，这4个参数都是可选的。如下所示为包含试验条件的一阶系统模型："

#: ../../source/behavior/equations/first_order.rst:219
msgid ""
"The following trajectory was simulated using these experimental conditions:"
msgstr ""
"下图是使用这些试验条件的仿真结果："

#: ../../source/behavior/equations/first_order.rst:224
msgid ""
"The trajectory terminates at 8 seconds because the simulator used the "
"``experiment`` annotation to determine how long to run the simulation."
msgstr ""
"从图中可以看到，在8秒时仿真终止，因为求解器通过\ ``experiment``\ 确定了仿真的运行时间。"

#: ../../source/behavior/equations/first_order.rst:0
msgid "Annotation Support"
msgstr ""
"标注应用"

#: ../../source/behavior/equations/first_order.rst:229
msgid ""
"The ``experiment`` annotation is widely supported.  But it is important to "
"keep in mind that, in general, a tool is free to ignore any or all "
"annotations."
msgstr ""
"虽然\ ``experiment``\ 标注在建立模型时被广泛的应用，但是也要注意到，一般情况下，建模工具是可以忽略任何或者全部标注内容的。"

#: ../../source/behavior/equations/first_order.rst:19
msgid "model"
msgstr "model关键字"


#: ../../source/behavior/equations/first_order.rst:20
msgid "der"
msgstr "der运算符"


#: ../../source/behavior/equations/first_order.rst:21
msgid "Real"
msgstr "Real类型"


#: ../../source/behavior/equations/first_order.rst:80
msgid "descriptive strings"
msgstr "描述性字符串"


#: ../../source/behavior/equations/first_order.rst:121
msgid "initial equation"
msgstr "初始化方程"


#: ../../source/behavior/equations/first_order.rst:194
#: ../../source/behavior/equations/first_order.rst:195
msgid "annotation"
msgstr "标注"


#: ../../source/behavior/equations/first_order.rst:195
msgid "experiment"
msgstr "experiment标注"
