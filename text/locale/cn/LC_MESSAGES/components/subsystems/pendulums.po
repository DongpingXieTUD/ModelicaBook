# 
msgid ""
msgstr ""
"Project-Id-Version: Modelica by Example 0.2.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-14 10:14-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/components/subsystems/pendulums.rst:4
msgid "Harmonic Motion of Pendulums"
msgstr ""

#: ../../source/components/subsystems/pendulums.rst:6
msgid ""
"In this section, we will recreate an interesting experiment [Berg]_ "
"involving pendulums.  If we create a series of pendulums with different "
"natural frequencies and then start them all at the same position, what we "
"will see is that they will oscillate at different frequencies.  But if we "
"remove any energy dissipation from the system, they will eventually all "
"\"reunite\" at their initial position."
msgstr ""

#: ../../source/components/subsystems/pendulums.rst:13
msgid ""
"In general, the period between these \"reunion\" events is the least common "
"multiple of the periods of all the pendulums in the system.  We can choose "
"the lengths of the pendulums to achieve a specific period between these "
"\"reunions\"."
msgstr ""

#: ../../source/components/subsystems/pendulums.rst:19
msgid "Pendulum Model"
msgstr ""

#: ../../source/components/subsystems/pendulums.rst:21
msgid ""
"In this section, we will use arrays of components to build our subsystem "
"model just like we did in our :ref:`distributed-heat-transfer` example.  But"
" before we can create an array of pendulums, we need to first have a model "
"of a single pendulum."
msgstr ""

#: ../../source/components/subsystems/pendulums.rst:32
msgid "The components of the pendulum can be rendered as follows:"
msgstr ""

#: ../../source/components/subsystems/pendulums.rst:40
msgid "System Model"
msgstr ""

#: ../../source/components/subsystems/pendulums.rst:44
msgid ""
"Now that we have an individual pendulum model, we can build a system of "
"pendulums.  If we want a system of :math:`n` pendulums where the period for "
"a complete cycle of the system is :math:`T` seconds, we compute the length "
"of the :math:`i^{th}` pendulum as:"
msgstr ""

#: ../../source/components/subsystems/pendulums.rst:53
msgid ""
"where :math:`g_n` is Earth's gravitational constant, :math:`n` is the number"
" of pendulums, :math:`T` is the period of one complete cycle of the system "
"and :math:`X` is the number of oscillations of the longest pendulum over "
":math:`T` seconds."
msgstr ""

#: ../../source/components/subsystems/pendulums.rst:58
msgid "In Modelica, we could build such a system as follows:"
msgstr ""

#: ../../source/components/subsystems/pendulums.rst:64
msgid "The following declaration is particularly interesting:"
msgstr ""

#: ../../source/components/subsystems/pendulums.rst:70
msgid ""
"Because ``pendulum`` is an array of ``n`` components, there will be ``n`` "
"values for the ``x``, ``m``, ``phi`` and ``L`` parameters associated with "
"these pendulums.  For example, if ``n=3``, then the model will have 3 values"
" for ``x``: ``pendulum[1].x``, ``pendulum[2].x`` and ``pendulum[3].x``.  In "
"the declaration of ``pendulum``, we handle this in different ways for "
"different parameters.  In the case of ``m``, we give each pendulum the same "
"value with the modification ``each m=1``.  However, in the case of ``L`` "
"(and ``x``), we supply an array of values, ``L=lengths`` used to initialize "
"the parameters where the values in the ``lengths`` array are computed using "
"the equation for pendulum lengths we introduced earlier.  We will give a "
"more complete discussion on how to apply modifications to arrays of "
"components :ref:`later in this chapter <sub-modifications>`."
msgstr ""

#: ../../source/components/subsystems/pendulums.rst:85
msgid ""
"If we simulate this system, we get the following solution for the trajectory"
" of each of the pendulums:"
msgstr ""

#: ../../source/components/subsystems/pendulums.rst:93
msgid ""
"As we can see from this plot, every 54 seconds all the pendulums return to "
"their initial position."
msgstr ""

#: ../../source/components/subsystems/pendulums.rst:110
msgid "Conclusion"
msgstr ""

#: ../../source/components/subsystems/pendulums.rst:112
msgid ""
"In this section, we have seen how arrays of components can be used, declared"
" and modified.  In this particular case, this allows us to specify the "
"number of pendulums in our system and then simulate them to observe the "
"peculiar behavior observed when we choose their lengths according to the "
"equation specified earlier."
msgstr ""

#: ../../source/components/subsystems/pendulums.rst:118
msgid ""
"Richard E. Berg, \"Pendulum waves: A demonstration of wave motion using "
"pendula\" http://dx.doi.org/10.1119/1.16608"
msgstr ""
