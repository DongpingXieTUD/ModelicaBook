# 
msgid ""
msgstr ""
"Project-Id-Version: Modelica by Example 0.2.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-14 10:14-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/components/subsystems/comp_arrays.rst:4
msgid "Arrays of Component"
msgstr "组件的阵列"

#: ../../source/components/subsystems/comp_arrays.rst:8
msgid ""
"Several of the examples in this chapter used arrays of components. Arrays of"
" components are useful when the user might want to \"scale\" the number of "
"components used using a parameter (as we saw in our discussions of both :ref"
":`distributed-heat-transfer` and :ref:`harmonic-motion`)."
msgstr ""
"本章中有数个示例使用了组件数组。"
"组件数组在某些情况下很有用。"
"例如，当用户可能希望使用参数来\ “扩展”\ 所使用部件的数量（正如我们在\ :ref:`distributed-heat-transfer`\ 以及\ :ref:`harmonic-motion`\ 的讨论里看到的一样）。"


#: ../../source/components/subsystems/comp_arrays.rst:22
msgid ""
"the syntax for creating an array of components is identical to the syntax "
"used for other types.  All that is required is to follow the name of the "
"variable being declared by a set of dimensions."
msgstr ""
"创建组件阵列的语法和用于其它类型的语法相同。"
"要做的仅仅是声明的变量名称后加上维度。"

#: ../../source/components/subsystems/comp_arrays.rst:26
msgid ""
"However, unlike scalars, components have other declarations inside them.  So"
" whenever an array of components is created, the structure of that component"
" is replicated for each component in the array. Modelica imposes a "
"restriction that in every array, every element must be the same type.  This "
"may seem obvious, but that is partly because we haven't discussed "
"``replaceable`` components yet.  We'll learn more about ``replaceable`` "
"components in the next chapter when we talk about Modelica's :ref"
":`configuration-management` features.  But for now we will simply point out "
"that it is not possible to ``redeclare`` only one element in an array."
msgstr ""
"然而，和标量不同，部件内会有其他声明。"
"因此，在创建分量的数组时，数组中每个组件的结构都会被复制。"
"Modelica要求数组中的每一个元素都必须为相同的类型。"
"这似乎是显而易见的。但这一定程度上是因为我们还没有讨论过\ ``replaceable``\ 部件。"
"我们会了解更多关于\ ``replaceable``\ 组件在下一章当我们谈论的Modelica的\ :ref:`configuration-management`\ 特性。"
"不过现在，我们只会简单地指出，只\ ``redeclare``\ 数组中的一个元素是不可能的。"

#: ../../source/components/subsystems/comp_arrays.rst:39
msgid ""
"As we touched on briefly in our discussion of :ref:`harmonic-motion`, when "
"we make :ref:`sub-modifications` to arrays of components, each variable "
"inside the component is implicitly treated as an array.  For example, "
"consider the following ``record`` definition:"
msgstr ""
"正如在\ :ref:`harmonic-motion`\ 讨论里简要地谈到的一样，我们在对组件阵列进行\ :ref:`sub-modifications`\ 的时候，该组件中每个变量均被隐式地视为一个数组。"
"举个例子，考虑下面的\ ``record``\ 定义："

#: ../../source/components/subsystems/comp_arrays.rst:52
msgid ""
"If we were to declare an array of ``Point`` components, *e.g.,* ``Point "
"p[5]``, any reference to ``p.x`` is treated as an array of 5 ``Real`` "
"variables, *i.e.,* ``p[1].x``, ``p[2].x``, ``p[3].x``, ``p[4].x`` and "
"``p[5].x``.  This is called *slicing*.  The bottom line is that if we leave "
"off a subscript (*e.g.,* ``p.x``), it gets \"pushed to the end\" (or more "
"technically, it is left \"unbound\" and can be \"bound\" later).  Also, if a"
" subscript is supplied as a range (*e.g.,* ``:``, ``1:end``, ``2:3``), then "
"the expression resolves to a subset of the array corresponding to the "
"indices in the range.  All of this holds even for arrays of components "
"containing arrays of components and so on."
msgstr ""
"假设我们声明\ ``Point``\ 组件的数组，如\ ``Point p[5]``\ 。"
"那么，任何对\ ``p.x``\ 的引用都会被视为有5个\ ``Real``\ 变量的数组，即\ ``p[1].x``\  、\ ``p[2].x``\  、\ ``p[3].x``\  、\ ``p[4].x``\ 以及\ ``p[5].x``\ 。"
"这就是所谓的\ *切片*\ 。"
"最重要的一点是，如果我们省略下标（如\ ``p.x``\ ），那么下标就对应所有的元素（在技术上说，下标维持在“未限定”状态。而随后则可以“限定”下标）。"
"此外，如果提供的下标为一个范围（例如\ ``：``\ 、\ ``1:end``\ 、\ ``2:3``\ ），"
"那么表达式则会解析为对应于该范围内所有索引的数组子集。"
"上述内容对于含有组件阵列的组件阵列也一样成立。"

#: ../../source/components/subsystems/comp_arrays.rst:64
msgid "The following example, demonstrates some of the more common cases:"
msgstr "下面的例子，说明了一些比较常见的情况："

#: ../../source/components/subsystems/comp_arrays.rst:6
msgid "arrays"
msgstr ""

#: ../../source/components/subsystems/comp_arrays.rst:6
msgid "of components"
msgstr ""

#: ../../source/components/subsystems/comp_arrays.rst:37
msgid "slicing"
msgstr ""

#: ../../source/components/subsystems/comp_arrays.rst:14
msgid ""
"Creating an array of components is really no different from creating an "
"array of scalar variables like we did in our previous discussion on :ref"
":`vectors-and-arrays`.  As we can see in this example,"
msgstr ""
"创建组件数组和我们前面在\ :ref:`vectors-and-arrays`\ 一节里讨论的标量数组创建实在没有任何不同。"
"正如我们在这个例子中看到，"
