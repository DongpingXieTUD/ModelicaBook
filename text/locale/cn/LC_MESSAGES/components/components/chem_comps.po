# 
msgid ""
msgstr ""
"Project-Id-Version: Modelica by Example 0.2.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-14 10:14-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/components/components/chem_comps.rst:4
msgid "Chemical Components"
msgstr "化学组件"

#: ../../source/components/components/chem_comps.rst:6
msgid ""
"For our last example of component oriented modeling, we'll return to the "
":ref:`chemical-system` we discussed in the chapter on :ref:`vectors-and-"
"arrays`.  However, this time we will create component models for the various"
" effects and show how connections in Modelica automatically ensure "
"conservation of species."
msgstr ""
"在最后一个基于组件建模的例子里，我们会再次回顾在\ :ref:`vectors-and-arrays`\ 章节内介绍的\ :ref:`chemical-system`\ 。"
"不过，这次我们将创建各种效应的组件模型，并演示Modelica内的连接是如何自动确保种类的守恒。"

#: ../../source/components/components/chem_comps.rst:13
msgid "Species"
msgstr "种类"

#: ../../source/components/components/chem_comps.rst:17
msgid ""
"The species we will be dealing with in this example are defined by the "
"following ``enumeration``:"
msgstr ""
"我们在本例中将要处理的物质类型由以下\ ``enumeration``\ 定义："

#: ../../source/components/components/chem_comps.rst:23
msgid ""
"Note that this definition exists within a package called ``ABX``. This "
"indicates that the component models are designed to work with this three "
"species system involving ``A``, ``B`` and ``X``."
msgstr ""
"请注意，这个定义在一个名为\ ``ABX``\ 的包内。"
"这表示该组件模型要在涉及\ ``A``\ 、\ ``B``\ 和\ ``X``\ 的系统内正常工作。"

#: ../../source/components/components/chem_comps.rst:28
msgid "``Mixture``"
msgstr ""

#: ../../source/components/components/chem_comps.rst:30
msgid ""
"Also contained in the ``ABX`` package is the following ``connector`` "
"definition (which can be found in the ``Interfaces`` sub-package):"
msgstr ""
"下列\ ``connector``\ 定义也包含在\ ``ABX``\ 包内（这可以在\ ``Interfaces``\ 子包中找到）："

#: ../../source/components/components/chem_comps.rst:36
msgid ""
"Here we see that our ``Mixture`` connector uses concentrations as the across"
" variables and a concentration rate as the flow variable. Although the "
"``flow`` variable in this case is not strictly the flow of a conserved "
"quantity, it will suffice in this example since all reactions are contained "
"within the same volume."
msgstr ""
"在这里我们看到，我们的\ ``Mixture``\ 连接器使用浓度为穿越变量，浓度变化率为流变量。"
"虽然，在这种情况下\ ``flow``\ 变量不是严格意义上的守恒量的流。但在本例中，由于所有反应都包含在相同的容器内，这样的定义足够了。"

#: ../../source/components/components/chem_comps.rst:42
msgid ""
"Note that both ``C`` and ``R`` in this connector are arrays where the "
"subscript is given by an ``enumeration`` type.  We saw earlier how :ref"
":`array-enum-dim` can be used in this way."
msgstr ""
"请注意，连接器里的\ ``C``\ 和\ ``R``\ 均为数组。而其下标由\ ``enumeration``\ 类型给出。"
"我们之前就看到过\ :ref:`array-enum-dim`\ 的这种用法。"

#: ../../source/components/components/chem_comps.rst:47
msgid "``Solution``"
msgstr ""

#: ../../source/components/components/chem_comps.rst:49
msgid ""
"Our first component model is used to track the concentration of the various "
"chemical species within a control volume.  As alluded to earlier, since all "
"reactions occur within the same volume, we don't need to actually specify "
"the size of the control volume."
msgstr ""
"我们的第一个组件模型用于追踪控制体积内各种化学物质的浓度。"
"正如前面所提到的，由于所有反应发生在同一体积内，我们实际上不需要指定控制体积的大小。"

#: ../../source/components/components/chem_comps.rst:54
msgid ""
"The ``Solution`` model is quite simple.  Like the ``RegionalPopulation`` "
"model discussed :ref:`earlier in this chapter <population-components>`, the "
"rate of change of the across variable associated with its sole connector is "
"equal to the ``flow`` variable on that same connector:"
msgstr ""
"\ ``Solution``\ 模型很简单。"
"如同\ :ref:`\ 在本章前面部分\ <population-components>`\ 讨论过的\ ``RegionalPopulation``\ 模型，"
"与模型唯一连接器相关联的横跨变量的变化率等于该连接器中的\ ``flow``\ 变量："

#: ../../source/components/components/chem_comps.rst:64
msgid "Reactions"
msgstr "反应"

#: ../../source/components/components/chem_comps.rst:67
msgid "``Reaction``"
msgstr ""

#: ../../source/components/components/chem_comps.rst:69
msgid ""
"As we saw previously, this system has three reactions.  Each of the specific"
" reactions we'll examine extend from the following ``partial`` model:"
msgstr ""
"正如我们之前所看到的，该系统有三种化学反应。"
"我们将研究的每个具体的反应，都会扩展自以下\ ``partial``\ 模型："

#: ../../source/components/components/chem_comps.rst:76
msgid ""
"We see that each reaction has a reaction coefficient, ``k``, and a "
"``Mixture`` connector, ``mixture``, that ultimately connects it to the "
"``Solution`` where the reaction is to take place.  The internal vector "
"variables ``consumed`` and ``produced`` play a role that is similar to the "
"``decline`` and ``growth`` variables in the ``SinkOrSource`` :ref:`discussed"
" earlier in this chapter <reproduction-component>` (*i.e.,* they allow us to"
" write contributions from individual reactions using an intuitive "
"terminology)."
msgstr ""
"我们看到，每个反应有反应系数\ ``k``\ 和\ ``Mixture``\ 类型的连接器\ ``mixture``\ 。而\ ``mixture``\ 连接器则连接到反应发生的\ ``Solution``\ 部件中。"
"内部向量值变量\ ``consumed``\ 和\ ``produced``\ 起到的作用类似于在"
"\ :ref:`\ 本章前面部分介绍过的\ <reproduction-component>`\ \ ``SinkOrSource``\ 内的\ ``decline``\ 和\ ``growth``\ 变量"
"（即使用这些变量，我们就可以将每个反应的作用以一种直观的方法描述出来。）"

#: ../../source/components/components/chem_comps.rst:87
msgid "``A+B->X``"
msgstr ""

#: ../../source/components/components/chem_comps.rst:89
msgid ""
"The first complete reaction model we will consider is the one that turns one"
" molecule of ``A`` and one molecule of ``B`` into one molecule of ``X``.  "
"Using the ``Reaction`` model, we can model this reaction as follows:"
msgstr ""
"第一个完整反应模型中，我们将考虑的是一个\ ``A``\ 分子，一个\ ``B``\ 分子合成一个\ ``X``\ 分子。"
"使用\ ``Reaction``\ 模型，我们可以如下对这种反应进行建模："

#: ../../source/components/components/chem_comps.rst:108
msgid ""
"The first thing to note about this model is that it is composed of non-"
"alphanumeric characters.  Specifically, the name of this model contains "
"``+``, ``-`` and ``>``.  This is permitted in Modelica **as long as the name"
" is quoted using single quote characters**.  The rate of the reaction, "
"``R``, is used in conjunction with the ``consumed`` and ``produced`` "
"variables inherited from the ``Reaction`` model to create equations that "
"clearly describe both the reactants and the products in this reaction."
msgstr ""
"该模型的第一个特点在于，它是由非字母数字字符组成的。"
"具体来说，模型的名称中包含\ ``+``\ 、\ ``-``\ 、\ ``>``\ 。"
"\ **只要名称是用单引号字符引用**\ ，这在Modelica是允许的。"
"反应速率\ ``R``\ 与继承自\ ``Reaction``\ 模型的\ ``consumed``\ 以及\ ``produced``\ 变量配合使用。"
"由此就可以清楚描述该反应中反应物和产物的方程式。"

#: ../../source/components/components/chem_comps.rst:118
msgid "``A+B<-X``"
msgstr ""

#: ../../source/components/components/chem_comps.rst:120
msgid ""
"The next reaction we will consider is one that takes one molecule of ``X`` "
"and transforms it (back) into one molecule of ``A`` and one molecule of "
"``B``.  This is the reverse of the previous reaction.  The Modelica code for"
" this reaction would be:"
msgstr ""
"我们会考虑的下一个反应是将一个\ ``X``\ 分子转换成（回）一个\ ``A``\ 分子和一个\ ``B``\ 分子。"
"这与之前的反应相反。"
"该反应的Modelica代码为："

#: ../../source/components/components/chem_comps.rst:137
msgid ""
"Again, the equations convey clearly which species are reactants (*i.e.,* are"
" consumed in the reaction) and which are the products (*i.e.,* those species"
" that are produced in the reaction)."
msgstr ""
"同样，方程清楚表达了哪些种类是反应物（即反应中的消耗），而那些是产物（即反应所产生的物质）。"

#: ../../source/components/components/chem_comps.rst:142
msgid "``X+B->R+S``"
msgstr ""

#: ../../source/components/components/chem_comps.rst:144
msgid ""
"Finally, our last reaction converts molecules of ``X`` and ``B`` into "
"molecules of ``R`` and ``S``:"
msgstr ""
"我们的最后一个反应将\ ``X``\ 分子和\ ``B``\ 分子转化成\ ``R``\ 分子和\ ``S``\ 分子："

#: ../../source/components/components/chem_comps.rst:159
msgid ""
"We do not track the concentration of the ``R`` and ``S`` species since they "
"are simply byproducts and do not participate in any other reactions.  This "
"model follows the same familiar pattern as before with the exception that "
"the ``A`` species is not involved."
msgstr ""
"我们不追踪\ ``R``\ 和\ ``S``\ 物质的浓度。"
"因为，它们不过是副产物，不参与任何其它反应。"
"本模型与前述模型同样遵循我们熟悉的模式。不同点在于，\ ``A``\ 类物质不参与反应。"

#: ../../source/components/components/chem_comps.rst:165
msgid "System"
msgstr "系统"

#: ../../source/components/components/chem_comps.rst:167
msgid ""
"We can combine the ``Solution`` model along with the various reaction models"
" as follows:"
msgstr ""
"我们可以将\ ``Solution``\ 模型和不同的反应模型相结合，如下："

#: ../../source/components/components/chem_comps.rst:173
msgid ""
"Note how modifications to the ``solution`` component are used to set the "
"initial concentration of species within the ``solution`` component.  Also, "
"the reaction coefficients are specified via modifications to each of the "
"reaction components.  Finally, each of the reaction components is attached "
"to the ``solution.mixture`` connector."
msgstr ""
"注意\ ``solution``\ 组件内的修改语句如何用来设置\ ``solution``\ 组件内物质的初始浓度。"
"另外，反应系数是用每个反应组分的修改语句指定的。"
"最后，每个反应组分都连接到\ ``solution.mixture``\ 连接器。"

#: ../../source/components/components/chem_comps.rst:180
msgid ""
"Simulating this system for 10 seconds yields the following concentration "
"trajectories:"
msgstr ""
"　"

#: ../../source/components/components/chem_comps.rst:185
msgid "#.. plot:: ../plots/ABX.py #   :include-source: no"
msgstr "　"

#: ../../source/components/components/chem_comps.rst:189
msgid "Conclusion"
msgstr "结论"

#: ../../source/components/components/chem_comps.rst:191
msgid ""
"From our earlier discussion of this chemical system, you may recall that the"
" resulting system of equations was:"
msgstr ""
"你可能会记得，在我们之前对这个化学系统的讨论中，推导出的方程组为："

#: ../../source/components/components/chem_comps.rst:202
msgid ""
"Each equation represents the accumulation of a particular species and each "
"term on the right hand side of those equations is computing the net flow of "
"that particular species into the control volume. Constructing this system by"
" hand for even a relatively small number of participating species is rife "
"with opportunities to introduce errors. By using a component oriented "
"approach instead, we never had to assemble such a system of equations.  As a"
" result, these equations were generated automatically.  By automating this "
"process, we can avoid many potential errors and the time required to "
"identify and fix them."
msgstr ""
"每个方程表示特定种类的增量。"
"方程右边的每项都用于计算该特定物种流入控制体积的净流量。"
"哪怕牵涉相对少量的种类，手工构建该系统都会很容易引入错误。"
"但通过使用面向组件方法，我们从不需要推导上述方程组。"
"其结果是，这些方程会自动生成。"
"通过自动化这个过程，我们能够避免许多潜在的错误。我们也不再需要花时间去找出并修复这些错误。"

#: ../../source/components/components/chem_comps.rst:15
msgid "enumeration"
msgstr "枚举类型"
