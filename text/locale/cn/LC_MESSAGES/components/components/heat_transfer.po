# 
msgid ""
msgstr ""
"Project-Id-Version: Modelica by Example 0.2.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-14 10:14-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/components/components/heat_transfer.rst:4
msgid "Heat Transfer Components"
msgstr "传热组件"

#: ../../source/components/components/heat_transfer.rst:6
msgid ""
"We'll start our discussion of component models by building some component "
"models in the heat transfer domain.  These models will allow us to recreate "
"the models we saw :ref:`previously <getting-physical>`, but this time using "
"component models to represent each of the various effects.  Investing the "
"time to make component models will then allow us to easily combine the "
"underlying physical behavior to create models for a wide variety of thermal "
"systems."
msgstr ""
"我们会以建立传热领域组件模型来开始对组件模型的讨论。"
"这些模型能让我们重构\ :ref:`\ 之前\ <getting-physical>`\ 看到的模型。"
"这次可以使用组件模型去表示各种不同的效应。"
"投入时间建立组件模型将允许我们轻易地结合底层物理行为，去为各种热系统创建模型。"

#: ../../source/components/components/heat_transfer.rst:15
msgid "Thermal Connectors"
msgstr "热连接器"

#: ../../source/components/components/heat_transfer.rst:17
msgid ""
"In our previous discussion on :ref:`simple-domains` we described how a "
"thermal connector could be described.  For the component models in this "
"section, we will utilize the thermal connector models from the Modelica "
"Standard Library.  These connectors are defined as follows:"
msgstr ""
"在此前\ :ref:`simple-domains`\ 的讨论里，我们描述了如何编写热连接器。"
"对于本节中的组件模型，我们将使用Modelica标准库内的热连接器模型。"
"这些连接器定义如下："

#: ../../source/components/components/heat_transfer.rst:59
msgid ""
"Careful inspection of these connector definitions shows that ``HeatPort_a`` "
"and ``HeatPort_b`` are identical in terms of their content to the "
"``HeatPort`` model.  The only difference is that ``HeatPort_a`` and "
"``HeatPort_b`` have distinguishing graphical icons."
msgstr ""
"仔细检查这些接口的定义表明， \ ``HeatPort_a``\ 和\ ``HeatPort_b``\ 在其内容上是与\ ``HeatPort``\ 模型是相同。"
"唯一的区别在于，\ ``HeatPort_a``\ 和\ ``HeatPort_b``\ 的图标有所不同。"

#: ../../source/components/components/heat_transfer.rst:64
msgid ""
"The component models presented in the remainder of this section will utilize"
" these connector definitions."
msgstr ""
"本节其余部分的组件模型都将会利用这些接口定义。"

#: ../../source/components/components/heat_transfer.rst:68
msgid "Component Models"
msgstr "组件模型"

#: ../../source/components/components/heat_transfer.rst:70
msgid ""
"When building component models, the goal is to create component models that "
"implement (only) one physical effect (*e.g.,* capacitance, convection).  By "
"implementing component models in this way, we will see that they can then be"
" combined in any infinite number of different configurations without the "
"need to add any more equations.  This kind of reuse of equations makes the "
"model developer more productive and avoids opportunities to introduce "
"errors."
msgstr ""
"在构建组件模型时，创建组件模型的目标是（仅）实现一个物理效应（例如热容、对流）。"
"通过以此方式中建立组件模型，我们将看到，模型就可以在无数不同的配置中任意组合，"
"而不需要添加任何更多的方程。"
"这种方程的重用使得模型的开发更有效率，并避免引入错误的可能。"

#: ../../source/components/components/heat_transfer.rst:81
msgid "Thermal Capacitance"
msgstr "热容"

#: ../../source/components/components/heat_transfer.rst:83
msgid ""
"Our first component model will be a model of lumped thermal capacitance. "
"with uniform temperature distribution. The equation we wish to associate "
"with this component model is:"
msgstr ""
"我们的首个组件模型是温度分布均匀的集总热容模型。"
"我们希望与此组件模型相关联的公式是："

#: ../../source/components/components/heat_transfer.rst:92
msgid ""
"The Modelica model (with the ``Icon`` annotation removed) representing this "
"equation is quite simple:"
msgstr ""
"表示这个公式Modelica模型（去掉了\ ``Icon``\ 标注）很简单："

#: ../../source/components/components/heat_transfer.rst:99
msgid ""
"where ``C`` is the thermal capacitance and ``T0`` is the initial "
"temperature."
msgstr ""
"其中\ ``C``\ 为热容，\ ``T0``\ 是初始温度。"

#: ../../source/components/components/heat_transfer.rst:102
msgid ""
"Note the presence of the ``node`` connector in this model.  This is how the "
"``ThermalCapacitance`` component model interacts with the \"outside world\"."
"  We will use the temperature at the ``node``, ``node.T`` to represent the "
"temperature of the thermal capacitance. The ``flow`` variable, "
"``node.Q_flow``, represents the flow of heat **into** the thermal "
"capacitance.  We can see this when looking at the equation for the thermal "
"capacitance:"
msgstr ""
"请注意在这个模型中带有\ ``node``\ 连接器。"
"这是\ ``ThermalCapacitance``\ 组件模型与“外面的世界”进行交互的地方。"
"我们将使用\ ``node``\ 的温度\ ``node.T``\ 去代表热容的温度。"
"\ ``flow``\ 变量\ ``node.Q_flow``\ 表示热在流\ **入**\ 热容。"
"我们可以在热容的公式看到这点："

#: ../../source/components/components/heat_transfer.rst:114
msgid ""
"Note that when ``node.Q_flow`` is positive, the temperature of the thermal "
"capacitance, ``node.T``, will increase.  This confirms that we have followed"
" the Modelica convention that ``flow`` variables on a connector represent a "
"flow of the conserved quantity, heat in this case, into the component (a "
"more thorough discussion of :ref:`flow-signs` will be presented shortly)."
msgstr ""
"注意，当\ ``node.Q_flow``\ 为正时，热容的温度\ ``node.T``\ 会增加。"
"这证实了我们遵循了Modelica的约定。连接器\ ``flow``\ 变量代表到组件的守恒量的流（在稍候我们会对\ :ref:`flow-signs`\ 进行更详细的讨论）。这里的守恒量为热。"

#: ../../source/components/components/heat_transfer.rst:121
msgid ""
"Using this model alone, we can already build a simple \"system\" model as "
"follows:"
msgstr ""
"仅仅使用这个模型，我们就已经可以构建一个如下的简单“系统”模型："

#: ../../source/components/components/heat_transfer.rst:127
msgid ""
"This model contains only the thermal capacitance element (as indicated by "
"the declaration of the variable ``cap`` of type ``ThermalCapacitance``) and "
"no other heat transfer elements (*e.g.,* conduction, convection, radiation)."
"  Ignore the ``Placement`` annotation for the moment, we'll provide a "
"complete explanation in a later section on :ref:`comp-annos`."
msgstr ""
"这种模式只包含热容元件（正如\ ``ThermalCapacitance``\ 类型的变量\ ``cap``\ 其声明所示），而没有其它传热元件（例如传导、对流、辐射）。"
"请暂时忽略\ ``Placement``\ 标注，我们会在后面关于\ :ref:`comp-annos`\ 的章节中对其提供完整的解释。"

#: ../../source/components/components/heat_transfer.rst:134
msgid ""
"Using the graphical annotations in the model (some of which were left out of"
" the previous listing) it can be rendered as:"
msgstr ""
"模型中使用的图形标注（其中一部分没有在上面列举出来）可以显示为："

#: ../../source/components/components/heat_transfer.rst:142
msgid ""
"Since no heat enters or leaves the thermal capacitance component, ``cap``, "
"the temperature of the capacitance remains constant as shown in the "
"following plot:"
msgstr ""
"由于没有热量进入或离开热容元件\ ``cap``\ 。热容的温度保持恒定，如下图所示："

#: ../../source/components/components/heat_transfer.rst:150
msgid "ConvectionToAmbient"
msgstr ""

#: ../../source/components/components/heat_transfer.rst:152
msgid ""
"To quickly add some heat transfer, we could define another component model "
"to represent heat transfer to some ambient temperature.  Such a model could "
"be represented in Modelica (again, without the ``Icon`` annotation) as "
"follows:"
msgstr ""
"要快速添加热传递，我们可以定义另一个组件模型，去表示到与环境温度的传热。"
"这样的模型可以在Modelica表示（再次，去掉了\ ``Icon``\ 标注）如下："

#: ../../source/components/components/heat_transfer.rst:161
msgid ""
"This model includes parameters for the heat transfer coefficient, ``h``, the"
" surface area, ``A`` and the ambient temperature, ``T_amb``. This model is "
"attached to other heat transfer elements through the connector ``port_a``."
msgstr ""
"该模型包括了传热系数\ ``h``\ 作为参数，表示表面积的参数\ ``A``\ 以及环境温度\ ``T_amb``\ 。"
"模式通过连接器\ ``port_a``\ 连接到其它传热元件。"

#: ../../source/components/components/heat_transfer.rst:166
msgid ""
"Again, we must pay close attention to the sign convention.  Recall from our "
"previous discussion of :ref:`thermal-capacitance` that Modelica follows a "
"sign convention that a positive value for a ``flow`` variable represents "
"flow into the component.  In particular, let's take a close look at the "
"equation in the ``ConvectionToAmbient`` model:"
msgstr ""
"同样，我们必须密切注意的正负号约定。"
"请回想我们此前对\ :ref:`thermal-capacitance`\ 的讨论。"
"Modelica遵从如下的正负号约定：\ ``flow``\ 变量的正值表示正在流入部件。"
"特别是，让我们来仔细看一下\ ``ConvectionToAmbient``\ 模型内的公式："

#: ../../source/components/components/heat_transfer.rst:177
msgid ""
"Note that when ``port_a.T`` is greater than ``T_amb``, the sign of "
"``port_a.Q_flow`` is greater than zero.  That means heat is flowing **into**"
" this component.  In other words, when ``port_a.T`` is greater than "
"``T_amb``, this component will **take heat away** from ``port_a`` (and, "
"conversely, when ``T_amb`` is greater than ``port_a.T``, it will **inject "
"heat into** ``port_a``)."
msgstr ""
"注意，当\ ``port_a.T``\ 大于\ ``T_amb``\ 时，\ ``port_a.Q_flow``\ 的符号为正。"
"这意味着热量正流\ **入**\ 这个组件。"
"换句话说，当\ ``port_a.T``\ 大于\ ``T_amb``\ 时，"
"这个组件将从\ ``port_a``\ \ **抽走热量**\ （相反，当\ ``T_amb``\ 大于\ ``port_a.T``\ 时，此组件会向\ ``port_a``\ \ **注入热能**\ ）。"

#: ../../source/components/components/heat_transfer.rst:184
msgid ""
"Having such a component model available enables us to combine it with the "
"``ThermalCapacitance`` model and simulate a system just like we modeled in "
":ref:`some of our earlier heat transfer examples <getting-physical>` using "
"the following Modelica code:"
msgstr ""
"有了这样的组件模型，可让我们将其与\ ``ThermalCapacitance``\ 模型相结合，"
"并像\ :ref:`\ 我们的一些早期的热传递的例子\ <getting-physical>`\ 一样，用以下Modelica代码进行系统模拟："

#: ../../source/components/components/heat_transfer.rst:194
msgid ""
"In this model, we see two components have been declared, ``cap`` and "
"``conv``.  The parameters for each of these components are also specified "
"when they are declared.  The following is a schematic for the "
"``CoolingToAmbient`` model:"
msgstr ""
"在模型中，我们看到了两个组件的声明：\ ``cap``\ 和\ ``conv``\ 。"
"每个组件的参数也在声明时指定了。"
"下面为\ ``CoolingToAmbient``\ 模型的示意图："

#: ../../source/components/components/heat_transfer.rst:204
msgid ""
"But what is really remarkable about this model is the equation section:"
msgstr ""
"但是，本模型特别的地方在于其方程区域："

#: ../../source/components/components/heat_transfer.rst:211
msgid ""
"This statement introduces one of the most important features in Modelica.  "
"Note that statement appears within an ``equation`` section.  While the "
"``connect`` operator looks like a function, it is much more than that.  It "
"represents the equations that should be generated to model the interaction "
"between the two specified connectors, ``cap.node`` and ``conv.port_a``."
msgstr ""
"此语句引入Modelica语言最重要的其中一个特性。"
"请注意语句出现在\ ``equation``\ 区域。"
"虽然\ ``connect``\ 操作符看起来像一个函数，其实其功能不止如此。"
"操作符代表了表述两个指定连接器\ ``cap.node``\ 和\ ``conv.port_a``\ 间相互作用的公式。"

#: ../../source/components/components/heat_transfer.rst:218
msgid ""
"In this context, a connection does two important things.  The first thing it"
" does is to generate an equation that equates the \"across\" variables on "
"either connector.  In this case, that means the following equation:"
msgstr ""
"在这种情况下，连接完成了两件重要的事情。"
"第一件事就是产生让两连接器上“横跨”变量相等的等式。"
"在这种情况下，这意味着下面的等式："

#: ../../source/components/components/heat_transfer.rst:227
msgid ""
"In addition, a connection generates an equation for all the through "
"variables as well.  The equation that is generated is a conservation "
"equation.  You can think of this conservation equation as a generalization "
"of Kirchoff's current law to any conserved quantity. Basically, it "
"represents the fact that the connection itself has no \"storage\" ability "
"and that whatever amount of the conserved quantity, in this case heat, that "
"flows out of one component must go into the other(s).  So in this case, the "
"connect statement will generate the following equation with respect to the "
"``flow`` variables:"
msgstr ""
"此外，连接也会为所有的贯通变量生成一个等式。"
"生成的方程为守恒方程。"
"你可以认为此守恒方程是基尔霍夫电流定律对所有守恒量的推广。"
"基本上，它代表该连接本身事实上没有“存储”能力。"
"无论有多少守恒量（这里是热量）从某部件里流出，那么这些量必然会进入另一个（些）部件。"
"因此在这种情况下，连接语句会为\ ``flow``\ 变量生成以下方程："

#: ../../source/components/components/heat_transfer.rst:241
msgid ""
"Note the sign convention here.  All the ``flow`` variables are summed. We "
"will examine more complex cases shortly where multiple components are "
"interacting.  But in this simple case, with only two components, we see "
"clearly that if one value for ``Q_flow`` is positive, the other must be "
"negative.  In other words, if heat is flowing out of one component, it must "
"be flowing into another.  These conservation equations ensure that we have a"
" proper accounting of conserved quantities throughout our network and that "
"no amount of the conserved quantity gets \"lost\"."
msgstr ""
"注意这里的正负号约定。"
"所有的\ ``flow``\ 变量相加在一起。"
"我们将在稍候研究有多个组件进行交互的更复杂的情况。"
"但因为这个简单的例子只带有两个部件。所以，我们可清楚看到，若\ ``Q_flow``\ 有一个值为正，则另一个必须为负。"
"换句话说，如果热从一个部件里流出，就必定会流入另一个不见。"
"这些守恒方程确保我们对网络内守恒量进行恰当的追踪，避免任何守恒量的“丢失”。"

#: ../../source/components/components/heat_transfer.rst:251
msgid ""
"A very simple way to summarize the behavior of a connection, in the context "
"of a thermal problem, is to **think of a connection as a perfectly "
"conducting element with no thermal capacitance**."
msgstr ""
"在热学问题背景下，有一个很简单的方法可以概括连接行为。我们可以\ **认为连接是一个没有热容完美的导热元件**\ 。"

#: ../../source/components/components/heat_transfer.rst:255
msgid ""
"If we simulate the ``CoolingToAmbient`` model above, we get the following "
"temperature trajectory:"
msgstr ""
"如果我们对上述\ ``CoolingToAmbient``\ 模型进行仿真，我们会得到以下的温度轨迹："

#: ../../source/components/components/heat_transfer.rst:264
msgid "Digging Deeper"
msgstr "进一步研究"

#: ../../source/components/components/heat_transfer.rst:266
msgid ""
"There is one slight issue with the ``CoolingToAmbient`` model.  We mentioned"
" earlier that when building component models it is best to isolate each "
"individual physical effect to its own component.  But we've actually lumped "
"two different effects into one component.  As we will see in a moment, this "
"limits the reusability of the component models. But first, let's refactor "
"the code to separate these effects out and then we'll revisit the system "
"level model using these new components."
msgstr ""
"\ ``CoolingToAmbient``\ 模型中有个小问题。"
"我们前面提到了，在建立组件模型时，最好是每个物理效应单独地隔离到一个组件中。"
"但我们这里实际上在一个组件里集成了两种不同的效应。"
"我们会马上看到，这限制了组件模型的可重用性。"
"但首先，让我们通过重构代码将两个效应分开。然后，我们会使用这些新组件再次建立系统级模型。"

#: ../../source/components/components/heat_transfer.rst:275
msgid "Convection"
msgstr "对流"

#: ../../source/components/components/heat_transfer.rst:277
msgid ""
"The first new component is a ``Convection`` model.  In this case, we won't "
"make any assumptions about the temperature at either end. Instead, we'll "
"only assume that each is connected to something with an appropriate thermal "
"connector.  The result is a model like this one:"
msgstr ""
"第一个新组件是\ ``Convection``\ 模型。"
"在这种情况下，我们将不对左右两端的温度作任何假设。"
"相反，我们只假设连接到每个模型都拥有适当的热连接器。"
"其结果就是如下的一个模型："

#: ../../source/components/components/heat_transfer.rst:286
msgid "This model contains two equations.  The first equation:"
msgstr "这个模型包含两个等式。第一个等式："

#: ../../source/components/components/heat_transfer.rst:292
msgid ""
"represents the fact that this component does not store heat.  The equation "
"enforces the constraint that whatever heat flows in from one connector must "
"flow out from the other (which is exactly the same behavior we saw from the "
"``connect`` statement earlier in this section).  The next equation:"
msgstr ""
"表明该组件并不存储热量。"
"方程实施了所有从某个连接器流入热量必须从其它连接器流出这一约束（这也正是我们在本节前面的\ ``connect``\ 语句所看到的相同行为）。"
"下一个公式："

#: ../../source/components/components/heat_transfer.rst:302
msgid ""
"captures the heat transfer relationship for convection by expressing the "
"relationship between the flow of heat through this component and the "
"temperatures on either end."
msgstr ""
"通过表达穿过该组件的热流和两端的温度之间的关系，描述了对流的热传递关系。"

#: ../../source/components/components/heat_transfer.rst:0
msgid "Number of equations"
msgstr "等式数目"

#: ../../source/components/components/heat_transfer.rst:310
msgid ""
"All our previous models had one connector and one equation.  The "
"``Convection`` model has two connectors.  As a result, it has two equations."
"  A simple rule of thumb is that you need as many equations as connectors.  "
"But keep in mind that this rule of thumb assumes that you are using "
"connectors with only one through variable on them and no \"internal "
"variables\" in your model (*e.g.,* ``protected`` variables).  The upcoming "
"section on :ref:`model-comps` will provide a more comprehensive discussion "
"on determining how many equations a component requires. Specifically, it "
"will provide guidance on how to build so-called :ref:`balanced-components`."
msgstr ""
"所有之前的模型都带有一个连接器和一个方程式。"
"\ ``Convection``\ 模型则有两个连接器。"
"其结果是，模型有两个方程。"
"一个简单的经验规则是，有多少个连接器就需要多少个方程。"
"但是，请记住这个经验法则假设你正在使用的连接器只有一个穿越变量。而且模型内没有\ “内部变量”（如\ ``protected``\ 变量）。"
"下一节\ :ref:`model-comps`\ 会对组件需要的方程数提供一个更全面的讨论。"
"具体来说，该节将对如何建立所谓的\ :ref:`balanced-components`\ 提供指导。"

#: ../../source/components/components/heat_transfer.rst:325
msgid "AmbientCondition"
msgstr "环境条件"

#: ../../source/components/components/heat_transfer.rst:327
msgid ""
"Now that we have the convection model, we need something to represent the "
"ambient conditions.  We need something like a thermal capacitance model, but"
" one that maintains a constant temperature.  Imagine if we took the "
"``ThermalCapacitance`` model and gave a very large value for its "
"capacitance, ``C``.  Then we'd have something that changed temperature very "
"slowly.  But what we want is something that doesn't change temperature at "
"all, as if it had a ``C`` value that was infinitely large."
msgstr ""
"现在，我们有对流模型，我们需要另一个模型来代表环境条件。"
"我们需要一个类似热容的模型。但这个模型需要保持恒定的温度。"
"试想一下，如果我们使用\ ``ThermalCapacitance``\ 模型，并为热容\ ``C``\ 赋一个非常大的值。"
"然后我们就会有一个温度变化非常缓慢的模型。"
"但我们需要的模型完全不改变温度。模型如同有一个无限大的\ ``C``\ 值。"

#: ../../source/components/components/heat_transfer.rst:338
msgid ""
"This kind of model comes up frequently and it is commonly called an "
"\"infinite reservoir\" model.  Typically, such a model is characterized by "
"the fact that no matter how much of the conserved quantity (heat in this "
"case) flows into or out of the component, the across variable remains "
"constant.  In an electrical context, such a model would represent electrical"
" ground.  In a mechanical context, it would represent a mechanical ground "
"(something that didn't change position, regardless of how much force was "
"applied)."
msgstr ""
"这种模型的出现得相当频繁。它通常被称为\ “无限大容器”\ 模型。"
"一般而言，这种模型的特征在于：无论多少的守恒量（这里为热）流入或流出组件，横跨变量都会保持恒定。"
"在电气领域，这样的模型代表电气接地。"
"在机械方面，这种模型代表一个机械地面（不管施加多大的力都不改变位置的物体）。"

#: ../../source/components/components/heat_transfer.rst:347
msgid ""
"We will represent our ambient conditions using the ``AmbientConditions`` "
"model:"
msgstr ""
"我们将使用\ ``AmbientConditions``\ 模型去描述环境条件："

#: ../../source/components/components/heat_transfer.rst:354
msgid ""
"Since we are talking about the heat transfer domain, this model is an "
"infinite reservoir for heat and no matter how much heat flows into or out of"
" this component, its temperature remains the same."
msgstr ""
"由于我们正在谈论传热领域，这个模型是一个无限储热容器。不管有多少热量流入或流出该组件，其温度均保持不变。"

#: ../../source/components/components/heat_transfer.rst:359
msgid "Flexibility"
msgstr "灵活性"

#: ../../source/components/components/heat_transfer.rst:361
msgid ""
"Using these new ``Convection`` and an ``AmbientCondition`` models, we can "
"reconstruct our simple system level heat transfer model using the following:"
msgstr ""
"使用这些新的\ ``Convection``\ 和\ ``AmbientCondition``\ 模型，我们可以使用重建此前的简单传热系统模型，如下："

#: ../../source/components/components/heat_transfer.rst:368
msgid "When rendered, the model looks like this:"
msgstr "该模型显示如下："

#: ../../source/components/components/heat_transfer.rst:375
msgid ""
"This may not seem like much of an improvement.  Although we went to the "
"trouble to break up the ``ConvectionToAmbient`` model into individual "
"``Convection`` and ``AmbientTemperature`` models, we still end up with the "
"same fundamental behavior, *i.e.,*"
msgstr ""
"这看起来可能没有什么大不了的改善。"
"虽然我们费心去将\ ``ConvectionToAmbient``\ 分拆成单独的\ ``Convection``\ 和\ ``AmbientTemperature``\ 模型，我们最终还是得到了相同的基本行为，即："

#: ../../source/components/components/heat_transfer.rst:383
msgid ""
"The big benefit of breaking down ``ConvectionToAmbient`` into ``Convection``"
" and ``AmbientTemperature`` models is the ability to recombine them in "
"different ways.  The following schematic is just one example of how the "
"handful of fundamental components we've constructed so far can be rearranged"
" to form an entirely new (and more complex) model:"
msgstr ""
"将\ ``ConvectionToAmbient``\ 分拆成\ ``Convection``\ 和\ ``AmbientTemperature``\ 模型的一大好处在于，现在我们可以将它们以不同的方式重新组合。"
"下面的示意图展示了一个例子，说明我们使用到目前为止建立的数个基本组件，就可以重新组合成一个全新（和更复杂）的模型："

#: ../../source/components/components/heat_transfer.rst:405
msgid ""
"In fact, with these components we can now make **arbitrarily complex** "
"networks of components and still never have to worry about formulating the "
"associated equations that describe their dynamics.  Everything that is "
"required to do this has already been captured in our component models.  This"
" allows us to focus on the process of creating and designing our system and "
"leave the tedious, time-consuming and error prone work of manipulating "
"equations behind."
msgstr ""
"其实，我们现在可以使用这些组件去建立\ **任意复杂的**\ 组件网，而不需要费心写出相关联的动力学方程。"
"所需要做的一切已包括在组件模型里。"
"这让我们能够专注于创建和设计系统的过程，而忽略背后繁琐、耗时且容易出错的方程变换工作。"

#: ../../source/components/components/heat_transfer.rst:192
msgid "connect"
msgstr ""

#: ../../source/components/components/heat_transfer.rst:306
msgid "number of equations required"
msgstr ""

#: ../../source/components/components/heat_transfer.rst:336
msgid "infinite reservoir"
msgstr ""
